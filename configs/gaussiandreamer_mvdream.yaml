name: "gaussiandreamer-mvdream"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0
 
data_type: "random-camera-datamodule"
data:
  load_type: ${system.load_type}
  batch_size: [4,4]
  eval_camera_distance: 4.0
  camera_distance_range: [1.5, 4.0]
  light_sample_strategy: "dreamfusion3dgs"
  height: [256, 720]
  width: [256, 720]
  resolution_milestones: [800]
  eval_height: 512
  eval_width: 512
  n_val_views: 4
  n_test_views: 5

system_type: "multigaussiandreamer-system"
system:
  load_type: 0 # 0: load from shape, 1: load from smpl
  load_path: "./load/shapes/stand.obj" # only used when load_type == 1
  radius: ${data.eval_camera_distance}
  sh_degree: 0
  prompt_processor_type: "stable-diffusion-prompt-processor"
  shift_guidance: false
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???
    negative_prompt: "ugly, bad anatomy, blurry, pixelated obscure, unnatural colors, poor lighting, dull, and unclear, cropped, lowres, low quality, artifacts, duplicate, morbid, mutilated, poorly drawn face, deformed, dehydrated, bad proportions, unfocused"

  guidance_type: "mvdream-guidance"
  guidance:
    guidance_scale: 100.0
    min_step_percent: [0, 0.6, 0.02, 1000]
    max_step_percent: [0, 0.98, 0.55, 1000]
    grad_clip: [0,1.5,2.0,1000]

  loggers:
    wandb:
      enable: false
      project: 'threestudio'
      name: gurunarayana100

  loss:
    lambda_sds: 1.
    lambda_sparsity: 0.2
    lambda_opaque: 0.0
  optimizer:
    name: Adam
    args:
      lr: 0.001
      betas: [0.9, 0.99]
      eps: 1.e-15

trainer:
  max_steps: 2000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 500
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
